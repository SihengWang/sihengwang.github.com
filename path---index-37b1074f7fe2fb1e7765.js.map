{"version":3,"sources":["webpack:///path---index-37b1074f7fe2fb1e7765.js","webpack:///./.cache/json/index.json"],"names":["webpackJsonp","367","module","exports","data","site","siteMetadata","title","description","url","author","adsense","remark","posts","post","html","frontmatter","layout","path","categories","date","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,YAAA,yBAAAC,IAAA,gCAAAC,OAAA,SAAAC,QAAA,KAAiIC,QAAWC,QAAUC,MAAQC,KAAA,whCAAAC,aAAokCC,OAAA,OAAAV,MAAA,mBAAAW,KAAA,qBAAAC,YAAA,YAAAC,KAAA,aAAAZ,YAAA,SAA4IM,MAAQC,KAAA,kkJAAkqDC,aAA0gGC,OAAA,OAAAV,MAAA,YAAAW,KAAA,sBAAAC,YAAA,wBAAAC,KAAA,aAAAZ,YAAA,uDAAgMM,MAAQC,KAAA,igMAA+kMC,aAAoEC,OAAA,OAAAV,MAAA,WAAAW,KAAA,gBAAAC,YAAA,0BAAAC,KAAA,aAAAZ,YAAA,iCAAoKa","file":"path---index-37b1074f7fe2fb1e7765.js","sourcesContent":["webpackJsonp([142629428675168],{\n\n/***/ 367:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Code Note\",\"description\":\"Siheng's personal blog\",\"url\":\"https://sihengwang.github.io/\",\"author\":\"Siheng\",\"adsense\":\"\"}},\"remark\":{\"posts\":[{\"post\":{\"html\":\"<h1>An h1 header</h1>\\n<p>Paragraphs are separated by a blank line.</p>\\n<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code class=\\\"language-text\\\">monospace</code>. Itemized lists\\nlook like:</p>\\n<ul>\\n<li>this one</li>\\n<li>that one</li>\\n<li>the other one</li>\\n</ul>\\n<!--more-->\\n<h2>An h2 header</h2>\\n<p>content starts at 4-columns in.</p>\\n<blockquote>\\n<p>Block quotes are\\nwritten like so.</p>\\n<p>They can span multiple paragraphs,\\nif you like.</p>\\n</blockquote>\\n<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all\\nin chapters 12—14”). Three dots … will be converted to an ellipsis.\\nUnicode is supported. ☺</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// javascript</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Hello World!!\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Markdown Example\",\"path\":\"/markdown-example/\",\"categories\":[\"Markdown\"],\"date\":\"2018/05/12\",\"description\":null}}},{\"post\":{\"html\":\"<h2>Git 迁移 - 从一个git仓库迁移到另外一个git仓库</h2>\\n<ol>\\n<li>从原地址克隆一份裸版本库，比如原本托管于 GitHub。</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">git clone --bare git://github.com/username/project.git</code></pre>\\n      </div>\\n<p>—bare 创建的克隆版本库都不包含工作区，直接就是版本库的内容，这样的版本库称为裸版本库。</p>\\n<!--more-->\\n<ol start=\\\"2\\\">\\n<li>\\n<p>然后到新的 Git 服务器上创建一个新项目，比如 GitCafe</p>\\n</li>\\n<li>\\n<p>以镜像推送的方式上传代码到 GitCafe 服务器上</p>\\n</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">cd project.git\\ngit push --mirror git@gitcafe.com/username/newproject.git</code></pre>\\n      </div>\\n<p>— mirror 克隆出来的裸版本对上游版本库进行了注册，这样可以在裸版本库中使用git fetch命令和上游版本库进行持续同步。</p>\\n<ol start=\\\"4\\\">\\n<li>删除本地代码</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">cd ..\\nrm -rf project.git</code></pre>\\n      </div>\\n<ol start=\\\"5\\\">\\n<li>到新服务器 GitCafe 上找到 Clone 地址，直接 Clone 到本地就可以了</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">git clone git@gitcafe.com/username/newproject.git</code></pre>\\n      </div>\\n<hr>\\n<h2>Git 把多個 Commit 合併成一個 Commit</h2>\\n<blockquote>\\n<p><a href=\\\"https://gitbook.tw/chapters/rewrite-history/merge-multiple-commits-to-one-commit.html\\\">参考1-把多個 Commit 合併成一個 Commit</a>\\n<a href=\\\"http://blog.codingplayboy.com/2017/12/13/git-commit-operate/\\\">参考2-Git提交历史的修改删除合并等实践</a></p>\\n</blockquote>\\n<p>有時候 Commit 的太過「瑣碎」，舉個例子來說：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">$ git log --oneline\\n27f6ed6 (HEAD -&gt; master) add dog 2\\n2bab3e7 add dog 1\\nca40fc9 add 2 cats\\n1de2076 add cat 2\\ncd82f29 add cat 1\\n382a2a5 add database settings\\nbb0c9c2 init commit</code></pre>\\n      </div>\\n<p>在 <code class=\\\"language-text\\\">cd82f29</code> 跟 <code class=\\\"language-text\\\">1de2076</code> 這兩個 Commit 都只有各加一個檔案（分別是 <code class=\\\"language-text\\\">cat1.html</code> 跟 <code class=\\\"language-text\\\">cat2.html</code>），<code class=\\\"language-text\\\">2bab3e7</code> 跟 <code class=\\\"language-text\\\">27f6ed6</code> 也一樣，都只各加了一個檔案而已。如果想把這幾個 Commit 合併成一個，會讓 Commit 看起來更乾淨一些。同樣可以使用互動模式的 Rebase 來處理：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">$ git rebase -i bb0c9c2</code></pre>\\n      </div>\\n<p>接著一樣再次出現 Vim 編輯器視窗，內容如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">pick 382a2a5 add database settings\\npick cd82f29 add cat 1\\npick 1de2076 add cat 2\\npick ca40fc9 add 2 cats\\npick 2bab3e7 add dog 1\\npick 27f6ed6 add dog 2\\n\\n# Rebase bb0c9c2..27f6ed6 onto bb0c9c2 (6 commands)\\n#\\n# Commands:\\n# ...[略]...</code></pre>\\n      </div>\\n<p>這裡我用的指令是 <code class=\\\"language-text\\\">squash</code>，把上面的內容修改成這樣：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">pick 382a2a5 add database settings\\npick cd82f29 add cat 1\\nsquash 1de2076 add cat 2\\nsquash ca40fc9 add 2 cats\\npick 2bab3e7 add dog 1\\nsquash 27f6ed6 add dog 2</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意！\\n在互動模式的紀錄由上而下是從最舊到最新，跟 git log 指令所呈現的結果是相反的。</p>\\n</blockquote>\\n<p>這樣的修改表示接下來會發生這些事：</p>\\n<ol>\\n<li>最後一行的 27f6ed6 會跟前一個 Commit 2bab3e7 進行合併，也就是 add dog 1 跟 add dog 2 這個 Commit 會合在一起。</li>\\n<li>倒數第三號的 ca40fc9 會跟前一個 Commit 1de2076 合併，但因為 1de2076 又會再往前一個 Commit cd82f29 合併，所以整個跟 cat 有關的這三個 Commit 會併成同一個。  </li>\\n</ol>\\n<p>存檔並離開 Vim 編輯器後，它會開始進行 Rebase，而在 Squash 的過程中，它還會跳出 Vim 編輯器讓你編輯一下訊息：</p>\\n<p><img src=\\\"https://gitbook.tw/images/rewrite-history/merge-multiple-commits-to-one-commit/squash1.png\\\"></p>\\n<p>我把訊息改成「add all cats」：</p>\\n<p><img src=\\\"https://gitbook.tw/images/rewrite-history/merge-multiple-commits-to-one-commit/squash2.png\\\"></p>\\n<p>同樣的，在另一次的 Squash 也會再編輯一次 Commit 訊息，我把它改成「add all dogs」。整個 Rebase 的訊息如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">$ git rebase -i bb0c9c2\\n[detached HEAD fb79104] add all cats\\n Date: Sun Aug 20 05:08:25 2017 +0800\\n 4 files changed, 0 insertions(+), 0 deletions(-)\\n create mode 100644 cat1.html\\n create mode 100644 cat2.html\\n create mode 100644 cat3.html\\n create mode 100644 cat4.html\\n[detached HEAD 803eeac] add all dogs\\n Date: Sun Aug 20 05:09:53 2017 +0800\\n 2 files changed, 0 insertions(+), 0 deletions(-)\\n create mode 100644 dog1.html\\n create mode 100644 dog2.html\\nSuccessfully rebased and updated refs/heads/master.</code></pre>\\n      </div>\\n<p>這時候的歷史紀錄就變成這樣了：</p>\\n<p><img src=\\\"https://gitbook.tw/images/rewrite-history/merge-multiple-commits-to-one-commit/squash3.png\\\"></p>\\n<p>這樣就把剛剛那些貓貓狗狗的，全部整理成兩個 Commit 了。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Git特殊技能使用\",\"path\":\"/git-special-skill/\",\"categories\":[\"Git\",\"Developer Tool\"],\"date\":\"2018/05/13\",\"description\":\"Git除了常规的使用外，还有很多平时不常用的功能，例如Git仓库迁移、多个commit合并之类的\"}}},{\"post\":{\"html\":\"<!--more-->\\n<h1>简介</h1>\\n<p>引用<a href=\\\"https://curl.haxx.se/\\\">curl</a>官方的一句话：</p>\\n<blockquote>\\n<p>command line tool and library for transferring data with URLs</p>\\n</blockquote>\\n<h1>功能支持</h1>\\n<ul>\\n<li>\\n<p>DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, Telnet and TFTP.</p>\\n</li>\\n<li>\\n<p>url supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP form based upload, proxies, HTTP/2, cookies, 用户+密码 方式认证 (Basic, Plain, Digest, CRAM-MD5, NTLM, Negotiate and Kerberos)</p>\\n</li>\\n<li>\\n<p>支持断点续传</p>\\n</li>\\n<li>\\n<p>支持代理</p>\\n</li>\\n</ul>\\n<h1>基本使用</h1>\\n<p>输入如下命令，可以直接读取网页源码</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl [网址]</code></pre>\\n      </div>\\n<p>通过上面的命令我们就可以读取到网页的源码。</p>\\n<p>例如我常用的查询ip的网站，ip.cn</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl ip.cn</code></pre>\\n      </div>\\n<p>返回</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">当前 IP：111.111.111.111 来自：火星</code></pre>\\n      </div>\\n<br />\\n<h1>常用参数介绍</h1>\\n<h2>1. -o 保存页面源码</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -o [文件名] ip.cn</code></pre>\\n      </div>\\n<h2>2. -L 重定向</h2>\\n<p>有些网站回默认重定向，如果使用<code class=\\\"language-text\\\">-L</code>参数，就会自动重定向</p>\\n<p>以 taobao.com 为例：</p>\\n<p><strong>不使用</strong><code class=\\\"language-text\\\">-L</code>参数时：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl taobao.com</code></pre>\\n      </div>\\n<p>返回：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;\\n&lt;html&gt;\\n&lt;head&gt;&lt;title&gt;302 Found&lt;/title&gt;&lt;/head&gt;\\n&lt;body bgcolor=&quot;white&quot;&gt;\\n&lt;h1&gt;302 Found&lt;/h1&gt;\\n&lt;p&gt;The requested resource resides temporarily under a different URI.&lt;/p&gt;\\n&lt;hr/&gt;Powered by Tengine&lt;/body&gt;\\n&lt;/html&gt;</code></pre>\\n      </div>\\n<p><strong>使用</strong><code class=\\\"language-text\\\">-L</code>参数时，就会自动重定向到 www.taobao.com</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -L taobao.com</code></pre>\\n      </div>\\n<h2>3. -i 请求内容包含协议头</h2>\\n<p><code class=\\\"language-text\\\">-i</code>参数可以包含协议头+页面代码一起返回</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -i taobao.com</code></pre>\\n      </div>\\n<p>返回：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">HTTP/1.1 302 Found\\nServer: Tengine\\nDate: Mon, 11 Jun 2018 16:52:26 GMT\\nContent-Type: text/html\\nContent-Length: 258\\nConnection: keep-alive\\nLocation: http://www.taobao.com/\\n\\n&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;\\n&lt;html&gt;\\n&lt;head&gt;&lt;title&gt;302 Found&lt;/title&gt;&lt;/head&gt;\\n&lt;body bgcolor=&quot;white&quot;&gt;\\n&lt;h1&gt;302 Found&lt;/h1&gt;\\n&lt;p&gt;The requested resource resides temporarily under a different URI.&lt;/p&gt;\\n&lt;hr/&gt;Powered by Tengine&lt;/body&gt;\\n&lt;/html&gt;</code></pre>\\n      </div>\\n<p>如果时大写<code class=\\\"language-text\\\">-I</code>参数，则只会返回响应头</p>\\n<h2>4. v 输出执行过程</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -v taobao.com</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">* Rebuilt URL to: taobao.com/\\n*   Trying 140.205.94.189...\\n* TCP_NODELAY set\\n* Connected to taobao.com (140.205.94.189) port 80 (#0)\\n&gt; GET / HTTP/1.1\\n&gt; Host: taobao.com\\n&gt; User-Agent: curl/7.54.0\\n&gt; Accept: */*\\n&gt;\\n&lt; HTTP/1.1 302 Found\\n&lt; Server: Tengine\\n&lt; Date: Mon, 11 Jun 2018 16:54:41 GMT\\n&lt; Content-Type: text/html\\n&lt; Content-Length: 258\\n&lt; Connection: keep-alive\\n&lt; Location: http://www.taobao.com/\\n&lt;\\n&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;\\n&lt;html&gt;\\n&lt;head&gt;&lt;title&gt;302 Found&lt;/title&gt;&lt;/head&gt;\\n&lt;body bgcolor=&quot;white&quot;&gt;\\n&lt;h1&gt;302 Found&lt;/h1&gt;\\n&lt;p&gt;The requested resource resides temporarily under a different URI.&lt;/p&gt;\\n&lt;hr/&gt;Powered by Tengine&lt;/body&gt;\\n&lt;/html&gt;\\n* Connection #0 to host taobao.com left intact</code></pre>\\n      </div>\\n<p>还可以通过 <code class=\\\"language-text\\\">--trace-ascii</code> 参数将debug信息写入到日志文件当中</p>\\n<h2>5. -X 指定HTTP Method</h2>\\n<p>curl默认Http Method是GET方式，通过<code class=\\\"language-text\\\">-X</code>可以指定其他方式</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -X POST www.demo.com\\ncurl -X DELETE www.demo.com</code></pre>\\n      </div>\\n<h2>6. —referer 指定referer信息</h2>\\n<p>可以通过<code class=\\\"language-text\\\">--referer</code>参数置顶页面从哪里跳转过来的</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --referer http</code></pre>\\n      </div>\\n<h2>7. —user-agent 指定User Agent</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --user-agent &quot;[User-Agent]&quot; [URL]</code></pre>\\n      </div>\\n<h2>8. —cookie 指定请求的cookie</h2>\\n<p>附带cookie发送请求：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --cooie &quot;[cookie]&quot; [URL]</code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">-c</code>保存请求返回的cookie到指定的文件，<code class=\\\"language-text\\\">-b</code>可以读取保存的cookie信息发送请求</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -c [文件名] https://www.taobao.com/\\ncurl -b [文件名] https://www.aliexpress.com/</code></pre>\\n      </div>\\n<h2>9. —header 新增请求头信息</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --header &quot;Content-Type:application/json&quot; https://www.taobao.com/</code></pre>\\n      </div>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"cURL工具使用\",\"path\":\"/2018/06/curl\",\"categories\":[\"Shell\",\"Developer Tool\"],\"date\":\"2018/06/12\",\"description\":\"curl是帮助我们通过URL读取传输数据的工具库\"}}}]}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---index-37b1074f7fe2fb1e7765.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Code Note\",\"description\":\"Siheng's personal blog\",\"url\":\"https://sihengwang.github.io/\",\"author\":\"Siheng\",\"adsense\":\"\"}},\"remark\":{\"posts\":[{\"post\":{\"html\":\"<h1>An h1 header</h1>\\n<p>Paragraphs are separated by a blank line.</p>\\n<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code class=\\\"language-text\\\">monospace</code>. Itemized lists\\nlook like:</p>\\n<ul>\\n<li>this one</li>\\n<li>that one</li>\\n<li>the other one</li>\\n</ul>\\n<!--more-->\\n<h2>An h2 header</h2>\\n<p>content starts at 4-columns in.</p>\\n<blockquote>\\n<p>Block quotes are\\nwritten like so.</p>\\n<p>They can span multiple paragraphs,\\nif you like.</p>\\n</blockquote>\\n<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all\\nin chapters 12—14”). Three dots … will be converted to an ellipsis.\\nUnicode is supported. ☺</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// javascript</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Hello World!!\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre>\\n      </div>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Markdown Example\",\"path\":\"/markdown-example/\",\"categories\":[\"Markdown\"],\"date\":\"2018/05/12\",\"description\":null}}},{\"post\":{\"html\":\"<h2>Git 迁移 - 从一个git仓库迁移到另外一个git仓库</h2>\\n<ol>\\n<li>从原地址克隆一份裸版本库，比如原本托管于 GitHub。</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">git clone --bare git://github.com/username/project.git</code></pre>\\n      </div>\\n<p>—bare 创建的克隆版本库都不包含工作区，直接就是版本库的内容，这样的版本库称为裸版本库。</p>\\n<!--more-->\\n<ol start=\\\"2\\\">\\n<li>\\n<p>然后到新的 Git 服务器上创建一个新项目，比如 GitCafe</p>\\n</li>\\n<li>\\n<p>以镜像推送的方式上传代码到 GitCafe 服务器上</p>\\n</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">cd project.git\\ngit push --mirror git@gitcafe.com/username/newproject.git</code></pre>\\n      </div>\\n<p>— mirror 克隆出来的裸版本对上游版本库进行了注册，这样可以在裸版本库中使用git fetch命令和上游版本库进行持续同步。</p>\\n<ol start=\\\"4\\\">\\n<li>删除本地代码</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">cd ..\\nrm -rf project.git</code></pre>\\n      </div>\\n<ol start=\\\"5\\\">\\n<li>到新服务器 GitCafe 上找到 Clone 地址，直接 Clone 到本地就可以了</li>\\n</ol>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">git clone git@gitcafe.com/username/newproject.git</code></pre>\\n      </div>\\n<hr>\\n<h2>Git 把多個 Commit 合併成一個 Commit</h2>\\n<blockquote>\\n<p><a href=\\\"https://gitbook.tw/chapters/rewrite-history/merge-multiple-commits-to-one-commit.html\\\">参考1-把多個 Commit 合併成一個 Commit</a>\\n<a href=\\\"http://blog.codingplayboy.com/2017/12/13/git-commit-operate/\\\">参考2-Git提交历史的修改删除合并等实践</a></p>\\n</blockquote>\\n<p>有時候 Commit 的太過「瑣碎」，舉個例子來說：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">$ git log --oneline\\n27f6ed6 (HEAD -&gt; master) add dog 2\\n2bab3e7 add dog 1\\nca40fc9 add 2 cats\\n1de2076 add cat 2\\ncd82f29 add cat 1\\n382a2a5 add database settings\\nbb0c9c2 init commit</code></pre>\\n      </div>\\n<p>在 <code class=\\\"language-text\\\">cd82f29</code> 跟 <code class=\\\"language-text\\\">1de2076</code> 這兩個 Commit 都只有各加一個檔案（分別是 <code class=\\\"language-text\\\">cat1.html</code> 跟 <code class=\\\"language-text\\\">cat2.html</code>），<code class=\\\"language-text\\\">2bab3e7</code> 跟 <code class=\\\"language-text\\\">27f6ed6</code> 也一樣，都只各加了一個檔案而已。如果想把這幾個 Commit 合併成一個，會讓 Commit 看起來更乾淨一些。同樣可以使用互動模式的 Rebase 來處理：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">$ git rebase -i bb0c9c2</code></pre>\\n      </div>\\n<p>接著一樣再次出現 Vim 編輯器視窗，內容如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">pick 382a2a5 add database settings\\npick cd82f29 add cat 1\\npick 1de2076 add cat 2\\npick ca40fc9 add 2 cats\\npick 2bab3e7 add dog 1\\npick 27f6ed6 add dog 2\\n\\n# Rebase bb0c9c2..27f6ed6 onto bb0c9c2 (6 commands)\\n#\\n# Commands:\\n# ...[略]...</code></pre>\\n      </div>\\n<p>這裡我用的指令是 <code class=\\\"language-text\\\">squash</code>，把上面的內容修改成這樣：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">pick 382a2a5 add database settings\\npick cd82f29 add cat 1\\nsquash 1de2076 add cat 2\\nsquash ca40fc9 add 2 cats\\npick 2bab3e7 add dog 1\\nsquash 27f6ed6 add dog 2</code></pre>\\n      </div>\\n<blockquote>\\n<p>注意！\\n在互動模式的紀錄由上而下是從最舊到最新，跟 git log 指令所呈現的結果是相反的。</p>\\n</blockquote>\\n<p>這樣的修改表示接下來會發生這些事：</p>\\n<ol>\\n<li>最後一行的 27f6ed6 會跟前一個 Commit 2bab3e7 進行合併，也就是 add dog 1 跟 add dog 2 這個 Commit 會合在一起。</li>\\n<li>倒數第三號的 ca40fc9 會跟前一個 Commit 1de2076 合併，但因為 1de2076 又會再往前一個 Commit cd82f29 合併，所以整個跟 cat 有關的這三個 Commit 會併成同一個。  </li>\\n</ol>\\n<p>存檔並離開 Vim 編輯器後，它會開始進行 Rebase，而在 Squash 的過程中，它還會跳出 Vim 編輯器讓你編輯一下訊息：</p>\\n<p><img src=\\\"https://gitbook.tw/images/rewrite-history/merge-multiple-commits-to-one-commit/squash1.png\\\"></p>\\n<p>我把訊息改成「add all cats」：</p>\\n<p><img src=\\\"https://gitbook.tw/images/rewrite-history/merge-multiple-commits-to-one-commit/squash2.png\\\"></p>\\n<p>同樣的，在另一次的 Squash 也會再編輯一次 Commit 訊息，我把它改成「add all dogs」。整個 Rebase 的訊息如下：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">$ git rebase -i bb0c9c2\\n[detached HEAD fb79104] add all cats\\n Date: Sun Aug 20 05:08:25 2017 +0800\\n 4 files changed, 0 insertions(+), 0 deletions(-)\\n create mode 100644 cat1.html\\n create mode 100644 cat2.html\\n create mode 100644 cat3.html\\n create mode 100644 cat4.html\\n[detached HEAD 803eeac] add all dogs\\n Date: Sun Aug 20 05:09:53 2017 +0800\\n 2 files changed, 0 insertions(+), 0 deletions(-)\\n create mode 100644 dog1.html\\n create mode 100644 dog2.html\\nSuccessfully rebased and updated refs/heads/master.</code></pre>\\n      </div>\\n<p>這時候的歷史紀錄就變成這樣了：</p>\\n<p><img src=\\\"https://gitbook.tw/images/rewrite-history/merge-multiple-commits-to-one-commit/squash3.png\\\"></p>\\n<p>這樣就把剛剛那些貓貓狗狗的，全部整理成兩個 Commit 了。</p>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"Git特殊技能使用\",\"path\":\"/git-special-skill/\",\"categories\":[\"Git\",\"Developer Tool\"],\"date\":\"2018/05/13\",\"description\":\"Git除了常规的使用外，还有很多平时不常用的功能，例如Git仓库迁移、多个commit合并之类的\"}}},{\"post\":{\"html\":\"<!--more-->\\n<h1>简介</h1>\\n<p>引用<a href=\\\"https://curl.haxx.se/\\\">curl</a>官方的一句话：</p>\\n<blockquote>\\n<p>command line tool and library for transferring data with URLs</p>\\n</blockquote>\\n<h1>功能支持</h1>\\n<ul>\\n<li>\\n<p>DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, Telnet and TFTP.</p>\\n</li>\\n<li>\\n<p>url supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP form based upload, proxies, HTTP/2, cookies, 用户+密码 方式认证 (Basic, Plain, Digest, CRAM-MD5, NTLM, Negotiate and Kerberos)</p>\\n</li>\\n<li>\\n<p>支持断点续传</p>\\n</li>\\n<li>\\n<p>支持代理</p>\\n</li>\\n</ul>\\n<h1>基本使用</h1>\\n<p>输入如下命令，可以直接读取网页源码</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl [网址]</code></pre>\\n      </div>\\n<p>通过上面的命令我们就可以读取到网页的源码。</p>\\n<p>例如我常用的查询ip的网站，ip.cn</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl ip.cn</code></pre>\\n      </div>\\n<p>返回</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">当前 IP：111.111.111.111 来自：火星</code></pre>\\n      </div>\\n<br />\\n<h1>常用参数介绍</h1>\\n<h2>1. -o 保存页面源码</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -o [文件名] ip.cn</code></pre>\\n      </div>\\n<h2>2. -L 重定向</h2>\\n<p>有些网站回默认重定向，如果使用<code class=\\\"language-text\\\">-L</code>参数，就会自动重定向</p>\\n<p>以 taobao.com 为例：</p>\\n<p><strong>不使用</strong><code class=\\\"language-text\\\">-L</code>参数时：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl taobao.com</code></pre>\\n      </div>\\n<p>返回：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;\\n&lt;html&gt;\\n&lt;head&gt;&lt;title&gt;302 Found&lt;/title&gt;&lt;/head&gt;\\n&lt;body bgcolor=&quot;white&quot;&gt;\\n&lt;h1&gt;302 Found&lt;/h1&gt;\\n&lt;p&gt;The requested resource resides temporarily under a different URI.&lt;/p&gt;\\n&lt;hr/&gt;Powered by Tengine&lt;/body&gt;\\n&lt;/html&gt;</code></pre>\\n      </div>\\n<p><strong>使用</strong><code class=\\\"language-text\\\">-L</code>参数时，就会自动重定向到 www.taobao.com</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -L taobao.com</code></pre>\\n      </div>\\n<h2>3. -i 请求内容包含协议头</h2>\\n<p><code class=\\\"language-text\\\">-i</code>参数可以包含协议头+页面代码一起返回</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -i taobao.com</code></pre>\\n      </div>\\n<p>返回：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">HTTP/1.1 302 Found\\nServer: Tengine\\nDate: Mon, 11 Jun 2018 16:52:26 GMT\\nContent-Type: text/html\\nContent-Length: 258\\nConnection: keep-alive\\nLocation: http://www.taobao.com/\\n\\n&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;\\n&lt;html&gt;\\n&lt;head&gt;&lt;title&gt;302 Found&lt;/title&gt;&lt;/head&gt;\\n&lt;body bgcolor=&quot;white&quot;&gt;\\n&lt;h1&gt;302 Found&lt;/h1&gt;\\n&lt;p&gt;The requested resource resides temporarily under a different URI.&lt;/p&gt;\\n&lt;hr/&gt;Powered by Tengine&lt;/body&gt;\\n&lt;/html&gt;</code></pre>\\n      </div>\\n<p>如果时大写<code class=\\\"language-text\\\">-I</code>参数，则只会返回响应头</p>\\n<h2>4. v 输出执行过程</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -v taobao.com</code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">* Rebuilt URL to: taobao.com/\\n*   Trying 140.205.94.189...\\n* TCP_NODELAY set\\n* Connected to taobao.com (140.205.94.189) port 80 (#0)\\n&gt; GET / HTTP/1.1\\n&gt; Host: taobao.com\\n&gt; User-Agent: curl/7.54.0\\n&gt; Accept: */*\\n&gt;\\n&lt; HTTP/1.1 302 Found\\n&lt; Server: Tengine\\n&lt; Date: Mon, 11 Jun 2018 16:54:41 GMT\\n&lt; Content-Type: text/html\\n&lt; Content-Length: 258\\n&lt; Connection: keep-alive\\n&lt; Location: http://www.taobao.com/\\n&lt;\\n&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML 2.0//EN&quot;&gt;\\n&lt;html&gt;\\n&lt;head&gt;&lt;title&gt;302 Found&lt;/title&gt;&lt;/head&gt;\\n&lt;body bgcolor=&quot;white&quot;&gt;\\n&lt;h1&gt;302 Found&lt;/h1&gt;\\n&lt;p&gt;The requested resource resides temporarily under a different URI.&lt;/p&gt;\\n&lt;hr/&gt;Powered by Tengine&lt;/body&gt;\\n&lt;/html&gt;\\n* Connection #0 to host taobao.com left intact</code></pre>\\n      </div>\\n<p>还可以通过 <code class=\\\"language-text\\\">--trace-ascii</code> 参数将debug信息写入到日志文件当中</p>\\n<h2>5. -X 指定HTTP Method</h2>\\n<p>curl默认Http Method是GET方式，通过<code class=\\\"language-text\\\">-X</code>可以指定其他方式</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -X POST www.demo.com\\ncurl -X DELETE www.demo.com</code></pre>\\n      </div>\\n<h2>6. —referer 指定referer信息</h2>\\n<p>可以通过<code class=\\\"language-text\\\">--referer</code>参数置顶页面从哪里跳转过来的</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --referer http</code></pre>\\n      </div>\\n<h2>7. —user-agent 指定User Agent</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --user-agent &quot;[User-Agent]&quot; [URL]</code></pre>\\n      </div>\\n<h2>8. —cookie 指定请求的cookie</h2>\\n<p>附带cookie发送请求：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --cooie &quot;[cookie]&quot; [URL]</code></pre>\\n      </div>\\n<p><code class=\\\"language-text\\\">-c</code>保存请求返回的cookie到指定的文件，<code class=\\\"language-text\\\">-b</code>可以读取保存的cookie信息发送请求</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl -c [文件名] https://www.taobao.com/\\ncurl -b [文件名] https://www.aliexpress.com/</code></pre>\\n      </div>\\n<h2>9. —header 新增请求头信息</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">curl --header &quot;Content-Type:application/json&quot; https://www.taobao.com/</code></pre>\\n      </div>\",\"frontmatter\":{\"layout\":\"post\",\"title\":\"cURL工具使用\",\"path\":\"/2018/06/curl\",\"categories\":[\"Shell\",\"Developer Tool\"],\"date\":\"2018/06/12\",\"description\":\"curl是帮助我们通过URL读取传输数据的工具库\"}}}]}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/index.json\n// module id = 367\n// module chunks = 142629428675168"],"sourceRoot":""}